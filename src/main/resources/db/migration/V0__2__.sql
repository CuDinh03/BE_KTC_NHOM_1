CREATE
SEQUENCE IF NOT EXISTS password_reset_token_id_seq INCREMENT BY 1;

CREATE TABLE account
(
    id          CHAR(36)     NOT NULL,
    code        VARCHAR(255) NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    created_by  VARCHAR(255),
    expense_sum numeric(38, 2),
    income_sum  numeric(38, 2),
    password    VARCHAR(255),
    status      INTEGER,
    update_at   TIMESTAMP WITHOUT TIME ZONE,
    updated_by  VARCHAR(255),
    username    VARCHAR(255) NOT NULL,
    role_id     CHAR(36),
    CONSTRAINT account_pkey PRIMARY KEY (id)
);

CREATE TABLE category
(
    id         CHAR(36)     NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    name       VARCHAR(255) NOT NULL,
    status     VARCHAR(255) NOT NULL,
    type       VARCHAR(255) NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_by VARCHAR(255) NOT NULL,
    account_id CHAR(36)     NOT NULL,
    CONSTRAINT category_pkey PRIMARY KEY (id)
);

CREATE TABLE expense
(
    id             CHAR(36)     NOT NULL,
    account_id     CHAR(36),
    amount         numeric(38, 2),
    category_id    CHAR(36),
    created_at     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by     VARCHAR(255) NOT NULL,
    date           date,
    month          INTEGER,
    monthly_log_id CHAR(36),
    updated_at     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_by     VARCHAR(255) NOT NULL,
    year           INTEGER,
    CONSTRAINT expense_pkey PRIMARY KEY (id)
);

CREATE TABLE income
(
    id                CHAR(36)       NOT NULL,
    account_id        CHAR(36),
    amount            numeric(38, 2) NOT NULL,
    created_at        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by        VARCHAR(255)   NOT NULL,
    date              date           NOT NULL,
    monthly_income_id CHAR(36),
    updated_at        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_by        VARCHAR(255)   NOT NULL,
    CONSTRAINT income_pkey PRIMARY KEY (id)
);

CREATE TABLE monthly_income
(
    id         CHAR(36)       NOT NULL,
    account_id CHAR(36),
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by VARCHAR(255)   NOT NULL,
    income_sum numeric(38, 2) NOT NULL,
    month      INTEGER        NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_by VARCHAR(255)   NOT NULL,
    year       INTEGER        NOT NULL,
    CONSTRAINT monthly_income_pkey PRIMARY KEY (id)
);

CREATE TABLE monthly_log
(
    id                CHAR(36)       NOT NULL,
    account_id        CHAR(36),
    budget            numeric(38, 2) NOT NULL,
    category_id       CHAR(36),
    created_at        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    created_by        VARCHAR(255)   NOT NULL,
    expense_sum       numeric(38, 2) NOT NULL,
    month             INTEGER        NOT NULL,
    updated_at        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_by        VARCHAR(255)   NOT NULL,
    year              INTEGER        NOT NULL,
    monthly_income_id CHAR(36)       NOT NULL,
    CONSTRAINT monthly_log_pkey PRIMARY KEY (id)
);

CREATE TABLE password_reset_token
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    expiry_date TIMESTAMP WITHOUT TIME ZONE,
    token       VARCHAR(255),
    user_id     CHAR(36) NOT NULL,
    CONSTRAINT password_reset_token_pkey PRIMARY KEY (id)
);

CREATE TABLE role
(
    id          CHAR(36)     NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    created_by  VARCHAR(255),
    description VARCHAR(255),
    name        VARCHAR(255) NOT NULL,
    status      INTEGER,
    update_at   TIMESTAMP WITHOUT TIME ZONE,
    updated_by  VARCHAR(255),
    CONSTRAINT role_pkey PRIMARY KEY (id)
);

CREATE TABLE users
(
    id         CHAR(36) NOT NULL,
    birthday   TIMESTAMP WITHOUT TIME ZONE,
    code       VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE,
    created_by VARCHAR(255),
    email      VARCHAR(255),
    first_name VARCHAR(255),
    gender     INTEGER,
    last_name  VARCHAR(255),
    phone      VARCHAR(255),
    status     INTEGER,
    update_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_by VARCHAR(255),
    account_id CHAR(36),
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE account
    ADD CONSTRAINT uc_account_code UNIQUE (code);

ALTER TABLE account
    ADD CONSTRAINT uc_account_username UNIQUE (username);

ALTER TABLE monthly_income
    ADD CONSTRAINT uc_monthlyincome_year_month UNIQUE (year, month, account_id);

ALTER TABLE monthly_log
    ADD CONSTRAINT uc_monthlylog_year_month_category_account UNIQUE (year, month, category_id, account_id);

ALTER TABLE monthly_log
    ADD CONSTRAINT uc_monthlylog_year_month_category_username UNIQUE (year, month, category_id, created_by);

ALTER TABLE role
    ADD CONSTRAINT uc_role_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uk1yov8c5ew74vlt8qra6cewq99 UNIQUE (account_id);

ALTER TABLE users
    ADD CONSTRAINT fk3pwaj86pwopu3ot96qlrfo2up FOREIGN KEY (account_id) REFERENCES account (id) ON DELETE NO ACTION;

ALTER TABLE category
    ADD CONSTRAINT fk6ymhc01g9q7834m0220ruu83m FOREIGN KEY (account_id) REFERENCES account (id) ON DELETE NO ACTION;

ALTER TABLE password_reset_token
    ADD CONSTRAINT fk83nsrttkwkb6ym0anu051mtxn FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE NO ACTION;

ALTER TABLE monthly_log
    ADD CONSTRAINT fk87ugu996totlgon7t4gylcbs3 FOREIGN KEY (monthly_income_id) REFERENCES monthly_income (id) ON DELETE NO ACTION;

ALTER TABLE account
    ADD CONSTRAINT fkd4vb66o896tay3yy52oqxr9w0 FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE NO ACTION;